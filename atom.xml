<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ivan</title>
  
  <subtitle>面向生活,未来可期</subtitle>
  <link href="https://blog.ivany.xyz/atom.xml" rel="self"/>
  
  <link href="https://blog.ivany.xyz/"/>
  <updated>2023-03-18T08:50:33.773Z</updated>
  <id>https://blog.ivany.xyz/</id>
  
  <author>
    <name>Ivany</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>魔改butterfly</title>
    <link href="https://blog.ivany.xyz/posts/4dec.html"/>
    <id>https://blog.ivany.xyz/posts/4dec.html</id>
    <published>2022-11-21T23:17:36.000Z</published>
    <updated>2023-03-18T08:50:33.773Z</updated>
    
    <content type="html"><![CDATA[<h3 id="隐藏aplayer默认显示歌词"><a href="#隐藏aplayer默认显示歌词" class="headerlink" title="隐藏aplayer默认显示歌词"></a>隐藏aplayer默认显示歌词</h3><p>新建 <code>source/js/aplayer.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">removelrc</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//检测是否存在歌词按钮</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.aplayer-icon-lrc&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//触发以后立刻移除监听</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;DOMNodeInserted&quot;</span>,removelrc);</span><br><span class="line">    <span class="comment">//稍作延时保证触发函数时存在按钮</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//以触发按钮的方式隐藏歌词，防止在点击显示歌词按钮时需要点击两次才能出现的问题</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.aplayer-icon-lrc&quot;</span>).<span class="title function_">click</span>();</span><br><span class="line">    &#125;, <span class="number">1</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;歌词隐藏success&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMNodeInserted&#x27;</span>, removelrc)</span><br></pre></td></tr></table></figure><p>打开_config.butterfly.yml主题文件， <code>bottom</code> 下引入aplayer.js</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bottom:</span></span><br><span class="line">  <span class="comment"># 隐藏底部歌词</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/aplayer.js&quot;</span> <span class="string">type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">个人在基于hexo的butterfly主题上的一些魔改</summary>
    
    
    
    <category term="博客相关" scheme="https://blog.ivany.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="博客" scheme="https://blog.ivany.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="butterfly" scheme="https://blog.ivany.xyz/tags/butterfly/"/>
    
    <category term="aplayer" scheme="https://blog.ivany.xyz/tags/aplayer/"/>
    
  </entry>
  
  <entry>
    <title>Vercel部署Hexo自定义域名</title>
    <link href="https://blog.ivany.xyz/posts/d9e.html"/>
    <id>https://blog.ivany.xyz/posts/d9e.html</id>
    <published>2022-11-21T17:19:45.000Z</published>
    <updated>2023-03-18T08:50:33.773Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注：建立在之前的失败安装上，借助Vercel提供的二级域名部署在网络中，省去了用GitHub二级域名发布的步骤。"><a href="#注：建立在之前的失败安装上，借助Vercel提供的二级域名部署在网络中，省去了用GitHub二级域名发布的步骤。" class="headerlink" title="注：建立在之前的失败安装上，借助Vercel提供的二级域名部署在网络中，省去了用GitHub二级域名发布的步骤。"></a>注：建立在之前的失败安装上，借助Vercel提供的二级域名部署在网络中，省去了用GitHub二级域名发布的步骤。</h3><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol><li>步骤相对少点</li><li>可以直接创建私有库，这样自己有一些自定化的主题就不会公布出来.</li><li>Vercel上可以把提供的二级域名换成自己的域名.</li></ol><h3 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h3><ol><li>Vercel注册</li><li>Github注册</li><li>安装node</li><li>安装git</li><li>安装vscode(可选，推荐)</li><li>域名(Vercel自带二级域名，国内连不上)</li></ol><h3 id="GitHub创建仓库"><a href="#GitHub创建仓库" class="headerlink" title="GitHub创建仓库"></a>GitHub创建仓库</h3><p>跳转创建页面在Repositories中New一个仓库，Repository name输入hexo(都可以的),下面勾选<strong>Private</strong>然后直接Create repositories.</p><p>之后进入hexo项目页面选择code再复制HTTPS里面的链接.</p><p>命令行部分(windows推荐在git Bash Here中操作)</p><blockquote><p>注：先自行选择一个目录做为自己的blog文件夹<br>安装hexo-cli</p></blockquote> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>初始化hexo，克隆github中作者提供的初始文件模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo</span><br></pre></td></tr></table></figure><p>克隆后会创建一个hexo文件夹，直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure><p>安装其他所需组件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>本地运行,默认端口4000，可指定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exo server</span><br><span class="line">hexo s //简写</span><br><span class="line">hexo server -p 端口</span><br></pre></td></tr></table></figure><p>然后浏览器访问<a href="http://localhost:4000/%EF%BC%8C%E8%87%B3%E6%AD%A4%E6%9C%AC%E5%9C%B0%E5%88%9D%E5%A7%8B%E6%A8%A1%E6%9D%BF%E6%90%AD%E5%BB%BA%E8%BF%90%E8%A1%8C%E5%AE%8C%E6%88%90">http://localhost:4000/，至此本地初始模板搭建运行完成</a></p><p>配置本地与github连接，生成本地.ssh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your eamil@example.com&quot;</span></span><br><span class="line">//<span class="string">&quot;&quot;</span>里面填入你的邮箱</span><br></pre></td></tr></table></figure><p>然后回车，接下来也不用填对应信息全部回车即可，最后会出现图下字符样式，之后用户(users)文件夹下的&lt;你的用户名称文件夹内&gt;会生成.ssh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">he key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">|             ooo.|</span></span><br><span class="line"><span class="string">|            . =..|</span></span><br><span class="line"><span class="string">|          .  O + |</span></span><br><span class="line"><span class="string">|       . . oo B  |</span></span><br><span class="line"><span class="string">|      . So++.o o.|</span></span><br><span class="line"><span class="string">|       .o*o.O o.o|</span></span><br><span class="line"><span class="string">|       .=o o + +.|</span></span><br><span class="line"><span class="string">|      ++E.o.. +..|</span></span><br><span class="line"><span class="string">|     ...+*o. o...|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>复制.ssh文件夹下id_rsa.pub文件内的内容</p><p>在github的ssh中粘贴内容 <a href="https://github.com/settings/keys">点击直达</a> 点击New SSH key，Title谁便填，Key type默认选Autentication Key，Key中粘贴id_rsa.pub中复制的内容.然后Add SSH key</p><p>之后返回Bash，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//step1 <span class="string">&quot;&quot;</span>内为你的GitHub初始邮箱</span><br><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">//step2 <span class="string">&quot;&quot;</span>内为你的GitHub用户名</span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br></pre></td></tr></table></figure><p>至此你可以在Bash中或者CMD中push本地文件到github了，push需要三步(具体用法Google，后面也可直接用hexo d命令上传GitHub就行)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//step1</span><br><span class="line">git add --all</span><br><span class="line">//step2</span><br><span class="line">git commit -m <span class="string">&quot;需要commit的内容&quot;</span></span><br><span class="line">//step3</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>使用hexo d命令上传，需在hexo提供了更快捷的提交到GitHub的命令，用vscode打开项目根文件hexo配置.config.yml文件，直接Ctrl+F搜索<code>deploy</code>关键字，在repository中添加GitHub中hexo项目的SSH引用，如：<a href="mailto:&#x67;&#105;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#109;">&#x67;&#105;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#109;</a>:xxxxxxx/hexo.git (xxxxxxx为你的用户名)，branch分支默认main就行，完整代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">    repository: git@github.com:xxxxxxxx/hexo.git</span><br><span class="line">    branch: main</span><br></pre></td></tr></table></figure><p>保持刚刚的修改，在VScode自带的Terminal下输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//step1</span><br><span class="line">hexo cl //清除之前的缓存</span><br><span class="line">//step2</span><br><span class="line">hexo g</span><br><span class="line">//step3</span><br><span class="line">hexo d //发布到gith上</span><br></pre></td></tr></table></figure><h3 id="Verce增加一个项目"><a href="#Verce增加一个项目" class="headerlink" title="Verce增加一个项目"></a>Verce增加一个项目</h3><p>Add New 一个prroject.<br>在左边Import Git Repository选择Continue With GItHub，选择自己的hexo项目，Project Name自取，Framework Preset一定一定不要选hexo，默认Other就行，然后Deploy，部署成功后会提供一个二级域名就可以访问了，但前提需要外网才能访问.<br>绑定自己的域名，规避Vercel提供的免费二级域名被墙问题，进入Vercel部署的项目中，点Setitngs-Domains，框中输入自己的域名Add，然后根据提供的值，自己在域名接管商设置dns.<br>现在就能通过自己域名访问hexo.</p><h3 id="后期修改大致流程"><a href="#后期修改大致流程" class="headerlink" title="后期修改大致流程"></a>后期修改大致流程</h3><p>先拉取最新的GitHub仓库在本地博客文件夹内，然后通过code编辑工具修改你的hexo，修改后，进入项目文件夹内空白部分右键以Git Bash Here运，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//清除缓存</span><br><span class="line">hexo cl</span><br><span class="line">//上传本地静态文件</span><br><span class="line">hexo g</span><br><span class="line">//本地运行，方便调试</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>如果一切就绪，本地运行是最终修改界面，再</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//清除缓存</span><br><span class="line">hexo cl</span><br><span class="line">//上传本地静态文件</span><br><span class="line">hexo g</span><br><span class="line">//发布(上传)到GitHub</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>然后Vercel也会自动拉取GitHub的修改然后自动部署，大概需要5分钟左右</p><p>最后，搭建与后期修改hexo步骤完成.</p>]]></content>
    
    
    <summary type="html">通过Vercel部署hexo博客完美更换butterfly主题并自定义域名</summary>
    
    
    
    <category term="博客相关" scheme="https://blog.ivany.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="安装" scheme="https://blog.ivany.xyz/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="Hexo" scheme="https://blog.ivany.xyz/tags/Hexo/"/>
    
    <category term="部署" scheme="https://blog.ivany.xyz/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="域名" scheme="https://blog.ivany.xyz/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Vercel+Github部署Hexo(初装)</title>
    <link href="https://blog.ivany.xyz/posts/1bb1.html"/>
    <id>https://blog.ivany.xyz/posts/1bb1.html</id>
    <published>2022-11-21T17:19:45.000Z</published>
    <updated>2023-03-18T08:50:33.773Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h3><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol><li>Vercel注册</li><li>Github 注册</li><li>Node安装</li><li>安装Git</li><li>安装vscode (可选，推荐)</li><li>域名 (Vercel自带域名，国内访问受限)</li></ol><h4 id="Vercel步骤"><a href="#Vercel步骤" class="headerlink" title="Vercel步骤"></a>Vercel步骤</h4><p>命令行部分(windows推荐在git Bash Here中操作)</p><blockquote><p>注：先自行选择一个目录做为自己的blog文件夹<br>安装hexo-cli</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>克隆github中的hexo项目到本地文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 你的仓库地址</span><br></pre></td></tr></table></figure><p>由于Vercel默认生成在GitHub的项目名称为hexo，克隆后会创建一个hexo文件夹，直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure><p>安装其他所需组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g //简写</span><br></pre></td></tr></table></figure><p>本地运行,默认端口4000，可指定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">hexo s //简写</span><br><span class="line">hexo server -p 端口</span><br></pre></td></tr></table></figure><p>然后浏览器访问<a href="http://localhost:4000/%EF%BC%8C%E8%87%B3%E6%AD%A4%E6%9C%AC%E5%9C%B0%E5%88%9D%E5%A7%8B%E6%A8%A1%E6%9D%BF%E6%90%AD%E5%BB%BA%E8%BF%90%E8%A1%8C%E5%AE%8C%E6%88%90">http://localhost:4000/，至此本地初始模板搭建运行完成</a></p><p>配置本地与github连接</p><p>生成本地.ssh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your eamil@example.com&quot;</span></span><br><span class="line">//<span class="string">&quot;&quot;</span>里面填入你的邮箱</span><br></pre></td></tr></table></figure><p>然后回车，接下来也不用填对应信息全部回车即可，最后会出现图下字符样式，之后用户(users)文件夹下的&lt;你的用户名称文件夹内&gt;会生成.ssh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">he key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">|             ooo.|</span></span><br><span class="line"><span class="string">|            . =..|</span></span><br><span class="line"><span class="string">|          .  O + |</span></span><br><span class="line"><span class="string">|       . . oo B  |</span></span><br><span class="line"><span class="string">|      . So++.o o.|</span></span><br><span class="line"><span class="string">|       .o*o.O o.o|</span></span><br><span class="line"><span class="string">|       .=o o + +.|</span></span><br><span class="line"><span class="string">|      ++E.o.. +..|</span></span><br><span class="line"><span class="string">|     ...+*o. o...|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>复制.ssh文件夹下id_rsa.pub文件内的内容.<br>在github的ssh中粘贴内容 <a href="https://github.com/settings/keys">点击直达</a> 点击New SSH key，Title谁便填，Key type默认选Autentication Key，Key中粘贴id_rsa.pub中复制的内容.然后Add SSH key.<br>之后返回Bash，输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//step1 <span class="string">&quot;&quot;</span>内为你的GitHub初始邮箱</span><br><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">//step2 <span class="string">&quot;&quot;</span>内为你的GitHub用户名</span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">//测试</span><br></pre></td></tr></table></figure><p>至此你可以在Bash中或者CMD中push本地文件到github了，push需要三步.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//step1</span><br><span class="line">git add --all</span><br><span class="line">//step2</span><br><span class="line">git commit -m <span class="string">&quot;需要commit的内容&quot;</span></span><br><span class="line">//step3</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>在hexo提供了更快捷的提交到GitHub的命令，用vscode打开项目根文件hexo配置.config.yml文件，直接Ctrl+F搜索<code>deploy</code>关键字，在repository中添加GitHub中hexo项目的SSH引用，如：<a href="mailto:&#103;&#105;&#116;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#103;&#105;&#116;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>:xxxxxxx/hexo.git (xxxxxxx为你的用户名)，branch分支默认main就行，完整代码如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">   <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">   <span class="attr">repository:</span> <span class="string">git@github.com:xxxxxxxx/hexo.git</span></span><br><span class="line">   <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>保持刚刚的修改，在VScode自带的Terminal下输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//step1</span><br><span class="line">hexo cl //清除之前的缓存</span><br><span class="line">//step2</span><br><span class="line">hexo g</span><br><span class="line">//step3</span><br><span class="line">hexo d //发布到gith上</span><br></pre></td></tr></table></figure><blockquote><p>注：hexo d发布的资源是public文件夹下的内容，会覆盖并删除hexo下的所有文件，</p></blockquote><div class="note info flat"><p>当发布到GitHub上后，然后就是Vercel自动部署会构建报错，那猜想可能Vercel要保持之前文件目录，那就推翻重做，GitHub仓库删除hexo，重新在Vercel中部署hexo，然后又克隆再本地，此时不用配置deploy的git参数，直接用VScode换个主题啥的，然后通过12步的方式push到GitHub仓库，之后GitHub依然构建报错。至此通过Vercel初始化部署hexo，拉取本地修改再上传的两种方式就都卡住了…（未完持续…）</p></div>]]></content>
    
    
    <summary type="html">在最初接触安装hexo遇到的一些坑及更换butterfly时遇到的问题</summary>
    
    
    
    <category term="博客相关" scheme="https://blog.ivany.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="安装" scheme="https://blog.ivany.xyz/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="Hexo" scheme="https://blog.ivany.xyz/tags/Hexo/"/>
    
    <category term="Vercel" scheme="https://blog.ivany.xyz/tags/Vercel/"/>
    
    <category term="Github" scheme="https://blog.ivany.xyz/tags/Github/"/>
    
  </entry>
  
</feed>
